@model IEnumerable<Item>

<h1>List of Items</h1>

@using (Html.BeginForm("Items", "Item", FormMethod.Get))
{
    <p>
        Find by Id: @Html.TextBox("searchString")
        <input type="submit" value="Search" />
    </p>
    <button type="button" class="button-order" onclick="location.href='@Url.Action("OrderForm", "Order")'">Create Order</button>
    <button type="button" class="button-add" onclick="location.href='@Url.Action("AddForm", "Item")'">Add Item</button>

}

@if (TempData["Message"] != null)
{
    <div id="successMessage" class="alert alert-success" role="alert">
        @TempData["Message"]
    </div>
}
<script>
    setTimeout(function () {
        document.getElementById('successMessage').style.display = 'none';
    }, 2200); 
</script>


<table>
    <tr>
        <th>
            @Html.ActionLink("ItemID", "Items", new { sortOrder = ViewBag.IdSortParm })
        </th>
        <th>
            @Html.ActionLink("Name", "Items", new { sortOrder = ViewBag.NameSortParm })
        </th>
        <th>
            @Html.ActionLink("Group", "Items", new { sortOrder = ViewBag.GroupSortParm })
        </th>
        <th>
            @Html.ActionLink("Measurement", "Items", new { sortOrder = ViewBag.MeasurementSortParm })
        </th>
        <th>
            @Html.ActionLink("Quantity", "Items", new { sortOrder = ViewBag.QuantitySortParm })
        </th>
        <th>
            @Html.ActionLink("Price Without VAT", "Items", new { sortOrder = ViewBag.PriceWithoutVATSortParm })
        </th>
        <th>
            @Html.ActionLink("Status", "Items", new { sortOrder = ViewBag.StatusSortParm })
        </th>
        <th>
            @Html.ActionLink("Storage Location", "Items", new { sortOrder = ViewBag.StorageLocationSortParm })
        </th>
        <th>
            @Html.ActionLink("Contact Person", "Items", new { sortOrder = ViewBag.ContactPersonSortParm })
        </th>
        <th>Action</th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>@item.ItemID</td>
            <td>@item.Name</td>
            <td>@item.Group</td>
            <td>@item.Measurement</td>
            <td>@item.Quantity</td>
            <td>@item.PriceWithoutVAT</td>
            <td>@item.Status</td>
            <td>@item.StorageLocation</td>
            <td>@item.ContactPerson</td>
            <td>
                <form asp-controller="Item" asp-action="DeleteItem" method="post">
                    <input type="hidden" name="ItemId" value="@item.ItemID" />
                    <button type="submit" class="button-delete" onclick="return confirm('Are you sure you want to delete this item?')">Delete</button>
                </form>
            </td>

        </tr>
    }
</table>

<style>

    .button-order {
        align-items: center;
        appearance: button;
        background-color: #0276FF;
        border-radius: 8px;
        border-style: none;
        box-shadow: rgba(255, 255, 255, 0.26) 0 1px 2px inset;
        box-sizing: border-box;
        color: #fff;
        cursor: pointer;
        display: flex;
        flex-direction: row;
        flex-shrink: 0;
        font-family: "RM Neue",sans-serif;
        font-size: 100%;
        line-height: 1.15;
        margin-bottom: 10px;
        padding: 10px 21px;
        text-align: center;
        text-transform: none;
        transition: color .13s ease-in-out,background .13s ease-in-out,opacity .13s ease-in-out,box-shadow .13s ease-in-out;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
    }

    .button-delete {
        align-items: center;
        appearance: button;
        background-color: #DC143C;
        border-radius: 8px;
        border-style: none;
        box-shadow: rgba(255, 255, 255, 0.26) 0 1px 2px inset;
        box-sizing: border-box;
        color: #fff;
        cursor: pointer;
        display: flex;
        flex-direction: row;
        flex-shrink: 0;
        font-family: "RM Neue",sans-serif;
        font-size: 100%;
        line-height: 1.15;
        margin-bottom: 10px;
        padding: 10px 21px;
        text-align: center;
        text-transform: none;
        transition: color .13s ease-in-out,background .13s ease-in-out,opacity .13s ease-in-out,box-shadow .13s ease-in-out;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
    }

    .button-add {
        align-items: center;
        appearance: button;
        background-color: rgb(50,205,50);
        border-radius: 8px;
        border-style: none;
        box-shadow: rgba(255, 255, 255, 0.26) 0 1px 2px inset;
        box-sizing: border-box;
        color: #fff;
        cursor: pointer;
        display: flex;
        flex-direction: row;
        flex-shrink: 0;
        font-family: "RM Neue",sans-serif;
        font-size: 100%;
        line-height: 1.15;
        margin-bottom: 10px;
        padding: 10px 21px;
        text-align: center;
        text-transform: none;
        transition: color .13s ease-in-out,background .13s ease-in-out,opacity .13s ease-in-out,box-shadow .13s ease-in-out;
        user-select: none;
        -webkit-user-select: none;
        touch-action: manipulation;
    }

   
    table {
        width: 100%;
        border-collapse: collapse;
    }

    th, td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd;
    }

    tr:nth-child(even) {
        background-color: #f7f8f9
    }

    th {
        background-color: #f1eeea
    }

    
</style>